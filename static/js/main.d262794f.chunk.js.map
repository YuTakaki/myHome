{"version":3,"sources":["assets/city.jpg","components/dispatch/myHomedataDispatch.js","components/context/myHomeData.js","components/link_seting/backgroundSettings.js","components/link_seting/link.js","components/link_seting/link_setting.js","components/main/main.js","components/todos/todos.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","myHomeDataDispatch","state","action","type","shortcut_links","data","filter","shortcut","i","todos","todo","map","finished","background","user","color","MYHOME","createContext","MyHomeData","props","useReducer","localStorage","getItem","JSON","parse","myHome","dispatch","useEffect","setItem","stringify","document","querySelector","style","defaultImage","backgroundSize","Provider","value","children","BackgroundSetting","useContext","className","onSubmit","e","preventDefault","file","reader","FileReader","addEventListener","result","readAsDataURL","files","required","multiple","accept","onClick","htmlFor","newUser","id","placeholder","onChange","target","Links","showShortcutOptions","nextSibling","classList","toggle","parentElement","lastChild","name","url","icon","remove","undefined","key","href","src","LinkSetting","Main","useState","Date","now","dates","setDates","lat","lon","location","setLocation","currentWeather","setCurrentWeather","forecast","setForecast","quote","setQuote","getDate","time","navigator","geolocation","getCurrentPosition","position","coords","longitude","latitude","setInterval","clearInterval","weather","axios","get","then","res","forecastList","list","dt_txt","date","getHours","contents","quotes","dayLists","hour","minutes","getMinutes","seconds","getSeconds","month","getMonth","day","getDay","main","Math","floor","temp","slice","temp_max","temp_min","length","author","ToDos","setFinish","deleteTodo","App","Boolean","window","hostname","match","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d262794f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/city.d4c97fa1.jpg\";","export const myHomeDataDispatch = (state, action) =>{\r\n    switch(action.type){\r\n        case 'ADD_SHORTCUT_LINK':\r\n            return {\r\n                ...state,\r\n                shortcut_links: [action.data, ...state.shortcut_links]\r\n            }\r\n        case 'DELETE_SHORTCUT_LINK':\r\n            return{\r\n                ...state,\r\n                shortcut_links : state.shortcut_links.filter((shortcut, i) => i !== action.data)\r\n            }\r\n        case 'ADD_TODOS':\r\n            return {\r\n                ...state,\r\n                todos : [action.data, ...state.todos]\r\n            }\r\n        case 'DELETE_TODOS':\r\n            return{\r\n                ...state,\r\n                todos : state.todos.filter((todo, i) => i !== action.data)\r\n            }\r\n        case 'IS_TODO_FINISH':\r\n            return{\r\n                ...state,\r\n                todos : state.todos.map((todo, i) => {\r\n                    if(i === action.data){\r\n                        todo.finished = !todo.finished\r\n\r\n                    }\r\n                    return todo\r\n                })\r\n            }\r\n        case 'SET_BACKGROUND':\r\n            return{\r\n                ...state,\r\n                background : action.data\r\n            }\r\n        case 'SET_USER':\r\n            return{\r\n                ...state,\r\n                user : action.data\r\n            }\r\n        case 'SET_COLOR':\r\n            return{\r\n                ...state,\r\n                color : action.data\r\n            }\r\n        \r\n        \r\n        default:\r\n            return state\r\n    }\r\n}","import React, {createContext, useReducer, useEffect} from 'react';\r\nimport { myHomeDataDispatch } from '../dispatch/myHomedataDispatch';\r\nimport defaultImage from '../../assets/city.jpg';\r\n\r\nexport const MYHOME = createContext()\r\n\r\nconst MyHomeData = (props) => {\r\n\r\n    const [myHome, dispatch] = useReducer(myHomeDataDispatch, {}, () => {\r\n        return localStorage.getItem('myHome') ? JSON.parse(localStorage.getItem('myHome')) : {\r\n            user : 'user',\r\n            color : '#FFFFFF',\r\n            background : 'default',\r\n            todos : [],\r\n            shortcut_links : []\r\n          }\r\n    });\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('myHome', JSON.stringify(myHome));\r\n        document.querySelector('main').style.background = `url(${myHome.background !== 'default' ? myHome.background : defaultImage}) center center no-repeat fixed`;\r\n        document.querySelector('main').style.backgroundSize = 'cover';\r\n        document.querySelector('.main_section').style.color = myHome.color;\r\n\r\n    }, [myHome])\r\n    return ( \r\n        <MYHOME.Provider value={{myHome, dispatch}}>\r\n            {props.children}\r\n        </MYHOME.Provider>\r\n     );\r\n}\r\n \r\nexport default MyHomeData;","import React, {useState, useContext} from 'react';\r\nimport { MYHOME } from '../context/myHomeData';\r\n\r\nconst BackgroundSetting = () => {\r\n    const {myHome, dispatch} = useContext(MYHOME);\r\n\r\n    const background = (e) => {\r\n        e.preventDefault();\r\n        let file = document.querySelector('.fileInput');\r\n        let reader = new FileReader();\r\n        reader.addEventListener('load', ()=>{\r\n            dispatch({type : 'SET_BACKGROUND', data : reader.result})\r\n        })\r\n        reader.readAsDataURL(file.files[0]);\r\n    }\r\n    const color = (e) => {\r\n        dispatch({type : 'SET_COLOR', data : e.target.value})\r\n    }\r\n\r\n    const changeUsername = (e) => {\r\n        e.preventDefault();\r\n        let newUser = document.querySelector('#userField');\r\n        if(newUser.value){\r\n            dispatch({type: 'SET_USER', data : newUser.value})\r\n            newUser.value = '';\r\n        }\r\n    }\r\n    return ( \r\n        <div className='options'>\r\n            <div className='background_options'>\r\n                <p>Background:</p>\r\n                <form onSubmit={background} className='customForm'>\r\n                    <input className='fileInput' required={true} type='file' multiple={false} accept=\"image/x-png,image/gif,image/jpeg\" />\r\n                    <input type='submit' value='Save' />\r\n                    <button onClick={() => dispatch({type : 'SET_BACKGROUND', data : 'default'})} type='button'>default</button>\r\n                </form>\r\n            </div>\r\n            <div>\r\n                <label htmlFor='userField'>\r\n                    <form onSubmit={changeUsername}>\r\n                        User\r\n                        <input id='userField' type='text' placeholder={myHome.user}/>\r\n                    </form>\r\n                </label>\r\n            </div>\r\n            <div>\r\n                <label htmlFor='colorField'>\r\n                    Font Color\r\n                    <input onChange={color} id='colorField' type=\"color\" value={myHome.color}></input>\r\n                </label>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default BackgroundSetting;","import React, {useState, useContext} from 'react';\r\nimport { MYHOME } from '../context/myHomeData';\r\n\r\nconst Links = () => {\r\n\r\n    const {myHome, dispatch} = useContext(MYHOME);\r\n\r\n    const addLinkExpand = (e) => {\r\n        e.target.parentElement.classList.toggle('add_link_expand');\r\n        e.target.classList.toggle('addLinkActive');\r\n        e.target.parentElement.lastChild.classList.toggle('activeForm');\r\n    }\r\n\r\n    const addLink = (e) => {\r\n        e.preventDefault();\r\n        const name = document.querySelector('.linkName');\r\n        const url = document.querySelector('.linkURL');\r\n        dispatch({type: 'ADD_SHORTCUT_LINK', data : {name : name.value, url : url.value, icon : ''}});\r\n        name.value = '';\r\n        url.value = ''\r\n        document.querySelector('.add_link').classList.remove('add_link_expand');\r\n        document.querySelector('.add_link form').classList.remove('activeForm');\r\n        document.querySelector('.add_link h3').classList.remove('addLinkActive')\r\n    }\r\n\r\n    const showShortcutOptions = (e) => {\r\n        e.target.nextSibling.classList.toggle('shortcutOptionsActive');\r\n    }\r\n    return ( \r\n        <div className='links'>\r\n            <div className='add_link'>\r\n                <h3 onClick={addLinkExpand}>Add Shortcut</h3>\r\n                <form onSubmit={addLink}>\r\n                    <label>\r\n                        Name\r\n                        <input className='linkName' type='text' required={true}/>\r\n                    </label>\r\n\r\n                    <label>\r\n                        URL\r\n                        <input className='linkURL' type='url' required={true} />\r\n                    </label>\r\n\r\n                    <input type='submit' />\r\n                </form>\r\n                \r\n            </div>\r\n            {myHome !== undefined && myHome.shortcut_links.map((shortcut, i) => (\r\n                \r\n                    <div className='shortcuts' key={i}>\r\n                        \r\n                        <a href={shortcut.url} target='_blank'>\r\n                            <img src={'https://www.google.com/s2/favicons?domain=' + shortcut.url}/>\r\n                            <p>{shortcut.name}</p>\r\n                            \r\n                        </a>\r\n                        <i onClick={showShortcutOptions} className='fa fa-ellipsis-h'></i>\r\n                        <div className='shortcutOptions'>\r\n                            <ul>\r\n                                <li onClick={(e) => {\r\n                                    e.target.parentElement.parentElement.classList.toggle('shortcutOptionsActive');\r\n                                    dispatch({type:'DELETE_SHORTCUT_LINK', data : i})}\r\n                                    }>Delete</li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                \r\n\r\n            ))}\r\n\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Links;","import React from 'react';\r\nimport BackgroundSetting from './backgroundSettings';\r\nimport Links from './link';\r\n\r\nconst LinkSetting = () => {\r\n    const active = () => {\r\n        document.querySelector('.links-option_container').classList.toggle('links-option_active')\r\n    }\r\n    return ( \r\n        <section className='links-option_section'>\r\n            <div className='links-option_container'>\r\n                <i onClick={active} className='fa fa-bars'></i>\r\n                <div className='links-option_content'>\r\n                    <Links />\r\n                    <BackgroundSetting />\r\n                </div>\r\n            </div>\r\n        </section>\r\n     );\r\n}\r\n \r\nexport default LinkSetting;","import React, {useState, useEffect, useContext} from 'react';\r\nimport axios from 'axios';\r\nimport { MYHOME } from '../context/myHomeData';\r\n\r\nconst Main = () => {\r\n    const {myHome} = useContext(MYHOME);\r\n\r\n\r\n\r\n    const [dates, setDates] = useState(Date.now);   \r\n    const [location, setLocation] = useState({\r\n        lat : 0,\r\n        lon : 0\r\n    });\r\n    const [currentWeather, setCurrentWeather] = useState({})\r\n    const [forecast, setForecast] = useState([]);\r\n    const [quote, setQuote] = useState({});\r\n    \r\n\r\n    useEffect(() => {\r\n        if(navigator.geolocation){\r\n            navigator.geolocation.getCurrentPosition(function(position){\r\n                let lon = position.coords.longitude;\r\n                let lat = position.coords.latitude;\r\n                setLocation({\r\n                    lon,\r\n                    lat\r\n                })\r\n            })\r\n        }\r\n        const time = setInterval(() => {\r\n            setDates(Date.now)\r\n        }, 1000);\r\n\r\n        return () => {\r\n            clearInterval(time)\r\n        }\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        let count = 1000;\r\n        const weather = setInterval(() => {\r\n            axios.get(`http://api.openweathermap.org/data/2.5/weather?lat=${location.lat}&lon=${location.lon}&appid=80595e901e5bb1c00132ed60b6c729b0`)\r\n                .then(res => {\r\n                    setCurrentWeather(res.data);\r\n                });\r\n            axios.get(`http://api.openweathermap.org/data/2.5/forecast?lat=${location.lat}&lon=${location.lon}&appid=80595e901e5bb1c00132ed60b6c729b0`)\r\n                .then(res => {\r\n                    let forecastList = res.data.list.filter(list => new Date(list.dt_txt).getDate() !== date && new Date(list.dt_txt).getHours() === 12)\r\n                    setForecast(forecastList);\r\n                });\r\n            axios.get('http://quotes.rest/qod.json')\r\n                .then(res => setQuote(res.data.contents.quotes[0]));\r\n\r\n        }, count);\r\n        return () => clearInterval(weather)\r\n    },[location])\r\n\r\n    \r\n    function getDate(time){\r\n        return new Date(time)\r\n    }\r\n\r\n    const monthLists = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];\r\n    const dayLists = [\"Sunday\",\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n\r\n    let hour = getDate(dates).getHours();\r\n    let minutes = getDate(dates).getMinutes();\r\n    let seconds = getDate(dates).getSeconds();\r\n    hour = hour >= 10 ? hour : `0${hour}`;\r\n    minutes = minutes >= 10 ? minutes : `0${minutes}`;\r\n    seconds = seconds >= 10 ? seconds : `0${seconds}`;\r\n    let month = monthLists[getDate(dates).getMonth()]\r\n    let day = dayLists[getDate(dates).getDay()]\r\n    let date = getDate(dates).getDate();\r\n\r\n    return (  \r\n        <section className='main_section'>\r\n            <div className='main_container'>\r\n                <div className='date'>\r\n                    <h3>{day}, {month} {date}</h3>\r\n                </div>\r\n                \r\n                <div className='time'>\r\n                    <h1>{hour}:{minutes}</h1>\r\n                    <span className='seconds'> {seconds}</span>\r\n                </div>\r\n                <div className='intro'>\r\n                    <h2>{hour >= 0 && hour < 12 ? 'Good Morning' : hour >= 12 && hour < 18 ? 'Good Afternoon' : 'Good Evening'} {myHome.user}</h2>\r\n                </div>\r\n                <div className='weather'>\r\n                    <p>{currentWeather.name} - <span  className='temp'>{currentWeather.main && Math.floor(currentWeather.main.temp - 273.15) + '°C'}</span></p>\r\n                    {currentWeather.weather && (\r\n                        <div className='hover'>\r\n                            Hover to show forecast\r\n                            <ul>\r\n                                <li className='currentWeather'>\r\n                                        <h3>{currentWeather.main && `${day.slice(0,3)}`}</h3>\r\n                                        <img src={`https://openweathermap.org/img/wn/${currentWeather.weather[0].icon}.png`} />\r\n                                        <p className='max'>{currentWeather.main && Math.floor(currentWeather.main.temp_max - 273.15) + '°C'}</p>\r\n                                        <p className='min'>{currentWeather.main && Math.floor(currentWeather.main.temp_min - 273.15) + '°C'}</p>\r\n                                </li>\r\n                                {forecast.length > 0 && forecast.map((list, i) => (\r\n                                    \r\n                                    <li key={i}>\r\n                                        <h4>{list.main && `${dayLists[new Date(list.dt_txt).getDay()].slice(0,3)}`}</h4>\r\n                                        <img src={`https://openweathermap.org/img/wn/${list.weather[0].icon}.png`} />\r\n                                        <p className='max'>{list.main && Math.floor(list.main.temp_max - 273.15) + '°C'}</p>\r\n                                        <p className='min'>{list.main && Math.floor(list.main.temp_min - 273.15) + '°C'}</p>\r\n                                    </li>\r\n                                    //asas\r\n                                ))}\r\n                            </ul>\r\n                        </div>)\r\n                    }\r\n                    \r\n                </div>\r\n                <div className='quote'>\r\n                {quote.length > 0 && (<h4>{`\"${ quote.quote} - ${quote.author}\"`}</h4>)}\r\n                    \r\n                </div>\r\n\r\n            </div>\r\n\r\n        </section>\r\n    );\r\n}\r\n \r\nexport default Main;","import React, {useState, useEffect, useContext} from 'react';\r\nimport { MYHOME } from '../context/myHomeData';\r\n\r\nconst ToDos = () => {\r\n    const {myHome, dispatch} = useContext(MYHOME);\r\n\r\n    const active = () => {\r\n        document.querySelector('.todos_content').classList.toggle('todos_content_active');\r\n        \r\n    }\r\n    const addTodo = (e) => {\r\n        e.preventDefault();\r\n        let todo = document.querySelector('.toDoInput');\r\n        if(todo.value !== ''){\r\n            dispatch({type: 'ADD_TODOS', data : {todo : todo.value, finished : false}})\r\n            todo.value = '';\r\n        }\r\n    }\r\n    const deleteTodo = (i) => {\r\n        dispatch({type: 'DELETE_TODOS', data : i});\r\n    }\r\n\r\n    const setFinish = (i) => {\r\n        dispatch({type: 'IS_TODO_FINISH', data : i});\r\n    }\r\n    return ( \r\n        <section className='todos_section'>\r\n           \r\n            <div className='todos_content'>\r\n                <i onClick={active} className ='fa fa-pencil-square-o'></i>\r\n                <div className='todo_form'>\r\n                    <form onSubmit={addTodo}>\r\n                        <button>+</button>\r\n                        <input className='toDoInput' type='text' placeholder='  Add Todos' />\r\n                    </form>\r\n                    <ul>\r\n                        {myHome.todos !== undefined && myHome.todos.map((todo, i) => (\r\n                            <li key={i}>\r\n                                <label>\r\n                                    <span className={`checkbox ${todo.finished === false ? '' : 'finish_span'}`} ></span>\r\n                                    <p className={`${todo.finished === false ? '' : 'finish_p'}`} onClick={() => setFinish(i)}>{todo.todo}</p>\r\n                                </label>\r\n                                <button onClick={() => deleteTodo(i)} className='fa fa-trash'></button>                        \r\n                            </li>\r\n\r\n                        ))}\r\n                        \r\n                    </ul>\r\n                    \r\n                </div>\r\n\r\n            </div>\r\n\r\n        \r\n\r\n        </section>\r\n     );\r\n}\r\n \r\nexport default ToDos;","import React, {useState, useEffect, useContext} from 'react';\nimport LinkSetting from './components/link_seting/link_setting';\nimport Main from './components/main/main';\nimport ToDos from './components/todos/todos';\nimport './styles/main.scss';\n\nconst App = () => {\n  \n  return (\n    <div className=\"App\">\n        <main>\n          <LinkSetting />\n          <Main/>\n          <ToDos />\n        </main>\n        <div className='catch'>\n          <h1>ONLY FOR 800PX AND ABOVE</h1>\n        </div>\n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport MyHomeData from './components/context/myHomeData';\n\nReactDOM.render(\n  <React.StrictMode>\n    <MyHomeData>\n      <App />\n    </MyHomeData>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}